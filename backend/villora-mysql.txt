CREATE TABLE user (
    userId INT NOT NULL AUTO_INCREMENT,
    userName VARCHAR(225),
    userPhone INT,
    userMail varchar(225),
    PRIMARY KEY (userId)
);

CREATE TABLE style (
    styleId INT NOT NULL AUTO_INCREMENT,
    styleName VARCHAR(50),
    styleDescription VARCHAR(250),
    PRIMARY KEY (styleId)
);

CREATE TABLE house (
    houseId INT NOT NULL AUTO_INCREMENT,
    houseName VARCHAR(100),
    housePrice INT,
    houseFloors INT,
    houseSquareFeet varchar(50),
    houseBedrooms INT,
    houseBathrooms INT,
    houseStyle INT,
    PRIMARY KEY (houseId),
    FOREIGN KEY (houseStyle) REFERENCES style(styleId)
);

CREATE TABLE material (
    materialId INT NOT NULL AUTO_INCREMENT,
    materialName VARCHAR(50),
    PRIMARY KEY (materialId)
);

CREATE TABLE houseMaterial (
    houseMaterialId INT NOT NULL AUTO_INCREMENT,
    houseMaterialHID INT,
    houseMaterialMID INT,
    PRIMARY KEY (houseMaterialId),
    FOREIGN KEY (houseMaterialHID) REFERENCES house(houseId),
    FOREIGN KEY (houseMaterialMID) REFERENCES material(materialId)
);

CREATE TABLE orders (
    orderId INT NOT NULL AUTO_INCREMENT,
    orderUID INT,
    orderHID INT,
    PRIMARY KEY (orderId),
    FOREIGN KEY (orderUID) REFERENCES user(userId),
    FOREIGN KEY (orderHID) REFERENCES house(houseId)
);



CREATE TABLE favorites (
    favoriteId INT NOT NULL AUTO_INCREMENT,
    favoriteUID INT,
    favoriteHID INT,
    PRIMARY KEY (favoriteId),
    FOREIGN KEY (favoriteUID) REFERENCES user(userId),
    FOREIGN KEY (favoriteHID) REFERENCES house(houseId)
);

SELECT * FROM house;
SELECT * FROM user;
SELECT * FROM style;
SELECT * FROM material;
SELECT * FROM houseMaterial;
SELECT * FROM orders;
SELECT * FROM favorites;




-- Josefine
INSERT INTO user(userName, userPhone, userMail)
VALUES
('Josefine lolin', 0734567891, 'josefine123@gmail.com'),
-- Stina
('Stina Nor', 0739876543, 'stina123@gmail.com'),
-- Malin
('Malin Alvist', 0731245678, 'malin123@mail.com'),
-- Tatiana
('Tatiana lop', 0761234567, 'tatiana123@gmail.com'),
-- Nassim
('Nassim benwazi', 0712121232, 'nasdos123@gmail.com'),
-- Abdul
('ciscobugger', 112, 'xizko10@gmail.com');

-- Josefine
INSERT INTO style(styleName, styleDescription)
VALUES
('Cottage', 'Cottage houses are typically small, cozy, and picturesque homes that often feature sloping roofs, asymmetrical facades, and a charming, rustic aesthetic.'),
('Country', 'Country homes are spacious and cozy, with warm rustic charm. They feature wood siding, large windows, and welcoming front porches. Inside, there may be exposed beams, fireplaces, and a cozy atmosphere.'),
('Craftsman', 'Craftsman homes have low-pitched roofs, wide porches, and handcrafted details like exposed rafters. They use natural materials and emphasize simplicity, function, and quality.'),
-- Stina
('Beach', 'Beach style is a casual design with natural light, open spaces, and an indoor-outdoor connection. It has large windows, natural materials, and a neutral palette evoking the feel of sand and sea.'),
('Bungalow', 'The Bungalow style is a low-profile and cozy architectural design that emphasizes simplicity, functionality, and craftsmanship. It often features a single-story layout, a wide front porch, and natural materials such as wood and stone.'),
('Cabin', 'The Cabin style is a cozy and rustic design with natural materials, functionality, and a simple gabled roof. It''s often located in a woodsy area and features an earthy color palette with natural wood textures.'),
-- Malin
('Classical', 'Our Classical homes exude timeless elegance, with symmetrical façades, grand columns, and luxurious finishes inspired by Greek and Roman architecture. With balance and proportion, they embody enduring refined beauty.'),
('Colonial', 'Our Colonial homes evoke a sense of history and tradition. With their symmetrical facades, central entrances, and multi-paned windows, they embody classic American style. Interiors feature warm woodwork, traditional details, and a formal layout.'),
('Contemporary', 'Our Contemporary homes embrace clean lines, minimalist design, and bold geometric shapes.  With a focus on simplicity and functionality, our Contemporary homes offer a sleek and sophisticated living experience that is both stylish and practical.'),
-- Tatiana
('Mediterranean', 'A style characterized by warm earthy colors, natural materials, and rustic textures.'),
  ('Modern', 'A style characterized by sleek lines, neutral colors, and minimalist design.'),
  ('Prairie', 'A style characterized by open spaces, natural light, and earthy color palettes.'),
-- Nassim
('Timber', 'A style featuring natural wood elements, warm earthy colors, and a rustic feel.'),
('Cedar shingles', 'A style characterized by clean lines, neutral colors, and a minimalist design, often with cedar shingles used as a prominent feature.'),
('Brick veneer', 'A timeless and classic option for home exteriors. With its natural earthy colors and durable texture, it adds a touch of warmth and sophistication to any home..'),
-- Abdul
('European', 'A style characterized by architectural elements from various European regions, often featuring stucco, stone, and brick facades, along with steep roofs and intricate detailing.'),
('Farmhouse', 'A style rooted in practicality and rural life, often featuring simple and functional design elements, with a mix of traditional and modern aesthetics, incorporating wood, neutral colors, and cozy textures.'),
('Log', 'A classic and timeless option for home exteriors, featuring exposed logs or timbers, natural wood colors, and a rugged appearance, evoking a sense of connection with nature and warmth in the overall design.');

-- Josefine
INSERT INTO material(materialName)
VALUES ('Vinyl siding'),
       ('Glass'),
       ('Aluminum siding'),
-- Stina
       ('Concrete'),
       ('Brick'),
       ('Wood'),
-- Malin
       ('Stone'),
       ('Metal'),
       ('Stucco'),
-- Tatiana
         ('Tile'),
         ('Engineered wood'),
         ('Synthetic stucco'),
-- Nassim
       ('Timber'),
       ('Cedar shingles'),
       ('Brick veneer'),
-- abdul
       ('Cement fiber siding'),
       ('Asphalt shingles'),
       ('Slate');

-- Gemensamt
INSERT INTO house(houseName, housePrice, houseFloors, houseSquareFeet, houseBedrooms, houseBathrooms, houseStyle)
VALUES ('Modern Mansion', 4580, 3, '8000 sq ft', 6, 8, 4),
('Luxury Penthouse', 3750, 1, '5000 sq ft', 3, 4, 3),
('Cozy Cottage', 3400, 1, '1500 sq ft', 2, 2, 5),
('Rustic Retreat', 4960, 2, '6000 sq ft', 4, 5, 8),
('Beachfront Villa', 6800, 2, '12000 sq ft', 7, 9, 18),
('Mountain Chalet', 6300, 3, '10000 sq ft', 5, 6, 14),
('Colonial Estate', 5300, 2, '9000 sq ft', 4, 6, 11);

-- Gemensamt
INSERT INTO orders(orderUID, orderHID)
VALUES (1, 2),
       (2, 1),
       (3, 5),
       (4, 2),
       (1, 4),
       (5, 7),
       (6, 6);
-- Gemensamt
INSERT INTO favorites(favoriteUID, favoriteHID)
VALUES (1, 4),
       (2, 1),
       (3, 2),
       (4, 2),
       (1, 3),
       (5, 7),
       (6, 2);

-- koppla ihop orders husnamn och användarnamn
SELECT userName, houseName
FROM user
INNER JOIN orders on user.userId = orderUID
INNER JOIN house on orderHID = houseId;

-- count hur många orders en person har
SELECT COUNT(*) AS countOrders FROM user
INNER JOIN orders o on user.userId = o.orderUID
WHERE userId = 1;

-- koppla ihop favoriter husnamn och användarnamn
SELECT userName, houseName
From user
INNER JOIN favorites ON userId = favoriteUID
INNER JOIN house ON  houseId = favoriteHID;

-- favorite count tänkt till most popular kanske
SELECT COUNT(*) AS countFavorites FROM favorites
INNER JOIN user u on favorites.favoriteUID = u.userId
INNER JOIN house h on favorites.favoriteHID = h.houseId
WHERE houseId = 3;










-- Stina Malin Abdul: 
INSERT INTO houseMaterial(houseMaterialHID, houseMaterialMID)
VALUES (1, 3),
       (1, 2),
       (1, 10),
       (2, 4),
       (2, 16),
       (2, 7),
       (3, 9),
       (3, 1),
       (3, 6),
       (4, 8),
       (4, 12),
       (5, 5),
       (5, 11),
       (6, 14),
       (6, 17),
       (6, 18),
       (7, 15),
       (7, 13);

-- Stina Malin Abdul: 
-- Inner Join: Hus och stil
SELECT houseName, housePrice, houseFloors, houseSquareFeet, houseBedrooms, houseBathrooms, styleName
FROM house
INNER JOIN style
ON house.houseStyle = style.styleId;

-- Stina Malin Abdul: 
-- Inner Join: Hus och material
SELECT house.houseName, house.housePrice, house.houseFloors, house.houseSquareFeet, house.houseBedrooms, house.houseBathrooms, material.materialName
FROM houseMaterial
INNER JOIN house ON house.houseId = houseMaterial.houseMaterialHID
INNER JOIN material ON material.materialId = houseMaterial.houseMaterialMID;

-- Stina Malin Abdul: 
-- Inner Join: Hus, material och stil
SELECT house.houseName, house.housePrice, house.houseFloors, house.houseSquareFeet, house.houseBedrooms, house.houseBathrooms, style.styleName, material.materialName
FROM houseMaterial
INNER JOIN house ON house.houseId = houseMaterial.houseMaterialHID
INNER JOIN material ON material.materialId = houseMaterial.houseMaterialMID
INNER JOIN style ON house.houseStyle = style.styleId;

